//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfAppClient.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Changes", Namespace="http://schemas.datacontract.org/2004/07/BLL")]
    public enum Changes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstName = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondName = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Password = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Authorization", ReplyAction="http://tempuri.org/IService1/AuthorizationResponse")]
        string Authorization(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Authorization", ReplyAction="http://tempuri.org/IService1/AuthorizationResponse")]
        System.Threading.Tasks.Task<string> AuthorizationAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Registration", ReplyAction="http://tempuri.org/IService1/RegistrationResponse")]
        string Registration(DAL.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Registration", ReplyAction="http://tempuri.org/IService1/RegistrationResponse")]
        System.Threading.Tasks.Task<string> RegistrationAsync(DAL.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AboutClient", ReplyAction="http://tempuri.org/IService1/AboutClientResponse")]
        DAL.Client AboutClient();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AboutClient", ReplyAction="http://tempuri.org/IService1/AboutClientResponse")]
        System.Threading.Tasks.Task<DAL.Client> AboutClientAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeInfoAboutClient", ReplyAction="http://tempuri.org/IService1/ChangeInfoAboutClientResponse")]
        string ChangeInfoAboutClient(WpfAppClient.ServiceReference.Changes changes, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeInfoAboutClient", ReplyAction="http://tempuri.org/IService1/ChangeInfoAboutClientResponse")]
        System.Threading.Tasks.Task<string> ChangeInfoAboutClientAsync(WpfAppClient.ServiceReference.Changes changes, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SendMessageToDispatcher", ReplyAction="http://tempuri.org/IService1/SendMessageToDispatcherResponse")]
        string SendMessageToDispatcher(string Title, string Message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SendMessageToDispatcher", ReplyAction="http://tempuri.org/IService1/SendMessageToDispatcherResponse")]
        System.Threading.Tasks.Task<string> SendMessageToDispatcherAsync(string Title, string Message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllOrders", ReplyAction="http://tempuri.org/IService1/AllOrdersResponse")]
        DAL.Order[] AllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllOrders", ReplyAction="http://tempuri.org/IService1/AllOrdersResponse")]
        System.Threading.Tasks.Task<DAL.Order[]> AllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateOrder", ReplyAction="http://tempuri.org/IService1/CreateOrderResponse")]
        string CreateOrder(DAL.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateOrder", ReplyAction="http://tempuri.org/IService1/CreateOrderResponse")]
        System.Threading.Tasks.Task<string> CreateOrderAsync(DAL.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPrice", ReplyAction="http://tempuri.org/IService1/GetPriceResponse")]
        double GetPrice(double km, DAL.ClassesOfCar classes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPrice", ReplyAction="http://tempuri.org/IService1/GetPriceResponse")]
        System.Threading.Tasks.Task<double> GetPriceAsync(double km, DAL.ClassesOfCar classes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WpfAppClient.ServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WpfAppClient.ServiceReference.IService1>, WpfAppClient.ServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Authorization(string Email, string Password) {
            return base.Channel.Authorization(Email, Password);
        }
        
        public System.Threading.Tasks.Task<string> AuthorizationAsync(string Email, string Password) {
            return base.Channel.AuthorizationAsync(Email, Password);
        }
        
        public string Registration(DAL.Client client) {
            return base.Channel.Registration(client);
        }
        
        public System.Threading.Tasks.Task<string> RegistrationAsync(DAL.Client client) {
            return base.Channel.RegistrationAsync(client);
        }
        
        public DAL.Client AboutClient() {
            return base.Channel.AboutClient();
        }
        
        public System.Threading.Tasks.Task<DAL.Client> AboutClientAsync() {
            return base.Channel.AboutClientAsync();
        }
        
        public string ChangeInfoAboutClient(WpfAppClient.ServiceReference.Changes changes, string param) {
            return base.Channel.ChangeInfoAboutClient(changes, param);
        }
        
        public System.Threading.Tasks.Task<string> ChangeInfoAboutClientAsync(WpfAppClient.ServiceReference.Changes changes, string param) {
            return base.Channel.ChangeInfoAboutClientAsync(changes, param);
        }
        
        public string SendMessageToDispatcher(string Title, string Message) {
            return base.Channel.SendMessageToDispatcher(Title, Message);
        }
        
        public System.Threading.Tasks.Task<string> SendMessageToDispatcherAsync(string Title, string Message) {
            return base.Channel.SendMessageToDispatcherAsync(Title, Message);
        }
        
        public DAL.Order[] AllOrders() {
            return base.Channel.AllOrders();
        }
        
        public System.Threading.Tasks.Task<DAL.Order[]> AllOrdersAsync() {
            return base.Channel.AllOrdersAsync();
        }
        
        public string CreateOrder(DAL.Order order) {
            return base.Channel.CreateOrder(order);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrderAsync(DAL.Order order) {
            return base.Channel.CreateOrderAsync(order);
        }
        
        public double GetPrice(double km, DAL.ClassesOfCar classes) {
            return base.Channel.GetPrice(km, classes);
        }
        
        public System.Threading.Tasks.Task<double> GetPriceAsync(double km, DAL.ClassesOfCar classes) {
            return base.Channel.GetPriceAsync(km, classes);
        }
    }
}
